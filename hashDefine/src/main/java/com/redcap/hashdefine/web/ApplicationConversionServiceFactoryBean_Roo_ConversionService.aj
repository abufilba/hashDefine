// WARNING: DO NOT EDIT THIS FILE. THIS FILE IS MANAGED BY SPRING ROO.
// You may push code into the target .java compilation unit if you wish to edit any member(s).

package com.redcap.hashdefine.web;

import com.redcap.hashdefine.domain.LogMessage;
import com.redcap.hashdefine.domain.Ticket;
import com.redcap.hashdefine.web.ApplicationConversionServiceFactoryBean;
import org.springframework.beans.factory.annotation.Configurable;
import org.springframework.core.convert.converter.Converter;
import org.springframework.format.FormatterRegistry;

privileged aspect ApplicationConversionServiceFactoryBean_Roo_ConversionService {
    
    declare @type: ApplicationConversionServiceFactoryBean: @Configurable;
    
    public Converter<LogMessage, String> ApplicationConversionServiceFactoryBean.getLogMessageToStringConverter() {
        return new org.springframework.core.convert.converter.Converter<com.redcap.hashdefine.domain.LogMessage, java.lang.String>() {
            public String convert(LogMessage logMessage) {
                return new StringBuilder().append(logMessage.getMessage()).toString();
            }
        };
    }
    
    public Converter<Long, LogMessage> ApplicationConversionServiceFactoryBean.getIdToLogMessageConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.Long, com.redcap.hashdefine.domain.LogMessage>() {
            public com.redcap.hashdefine.domain.LogMessage convert(java.lang.Long id) {
                return LogMessage.findLogMessage(id);
            }
        };
    }
    
    public Converter<String, LogMessage> ApplicationConversionServiceFactoryBean.getStringToLogMessageConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.String, com.redcap.hashdefine.domain.LogMessage>() {
            public com.redcap.hashdefine.domain.LogMessage convert(String id) {
                return getObject().convert(getObject().convert(id, Long.class), LogMessage.class);
            }
        };
    }
    
    public Converter<Ticket, String> ApplicationConversionServiceFactoryBean.getTicketToStringConverter() {
        return new org.springframework.core.convert.converter.Converter<com.redcap.hashdefine.domain.Ticket, java.lang.String>() {
            public String convert(Ticket ticket) {
                return new StringBuilder().append(ticket.getDescription()).append(' ').append(ticket.getSummary()).append(' ').append(ticket.getReference()).toString();
            }
        };
    }
    
    public Converter<Long, Ticket> ApplicationConversionServiceFactoryBean.getIdToTicketConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.Long, com.redcap.hashdefine.domain.Ticket>() {
            public com.redcap.hashdefine.domain.Ticket convert(java.lang.Long id) {
                return Ticket.findTicket(id);
            }
        };
    }
    
    public Converter<String, Ticket> ApplicationConversionServiceFactoryBean.getStringToTicketConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.String, com.redcap.hashdefine.domain.Ticket>() {
            public com.redcap.hashdefine.domain.Ticket convert(String id) {
                return getObject().convert(getObject().convert(id, Long.class), Ticket.class);
            }
        };
    }
    
    public void ApplicationConversionServiceFactoryBean.installLabelConverters(FormatterRegistry registry) {
        registry.addConverter(getLogMessageToStringConverter());
        registry.addConverter(getIdToLogMessageConverter());
        registry.addConverter(getStringToLogMessageConverter());
        registry.addConverter(getTicketToStringConverter());
        registry.addConverter(getIdToTicketConverter());
        registry.addConverter(getStringToTicketConverter());
    }
    
    public void ApplicationConversionServiceFactoryBean.afterPropertiesSet() {
        super.afterPropertiesSet();
        installLabelConverters(getObject());
    }
    
}
